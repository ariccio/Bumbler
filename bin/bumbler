#!/usr/bin/env ruby
# frozen_string_literal: true
add_load_path = lambda do
  path = File.join(File.dirname(__FILE__), '..', 'lib')
  $LOAD_PATH << path unless $LOAD_PATH.include? path
end

add_load_path.call # in case we execute via ./bin

require 'optparse'
require 'bumbler'

options = {}
OptionParser.new do |parser|
  parser.banner = <<~BANNER
    Bumbler shows how long loading your bundle components take.

    Usage:
        bumbler

    Options:
  BANNER
  parser.on("-t", "--threshold MILISECONDS", Integer, "Threshold in ms to be listed as slow") { |t| options[:threshold] = t }
  parser.on("--initializers", "Show load time of initializers") { options[:initializers] = true }
  parser.on("-h", "--help", "Show this.") { puts parser; exit }
  parser.on('-v', '--version', 'Show Version') { puts Bumbler::VERSION; exit }
end.parse!

Bumbler::Hooks.slow_threshold = options[:threshold] if options[:threshold]

if options[:initializers]
  require './config/application'
  add_load_path.call # bundler kicks us out
  require 'bumbler/track_initializers'
  require './config/environment'
else
  require 'bumbler/go'
  require './config/environment'
  add_load_path.call # bundler kicks us out
end

Bumbler::Stats.all_slow_items
